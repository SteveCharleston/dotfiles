set nocompatible " be iMproved
filetype off " required!

set rtp+=~/.vim/vundle.git/ 
call vundle#rc()

" let Vundle manage Vundle
Bundle 'gmarik/vundle'

syntax on
set autoindent
set background=light
set showmatch
set pastetoggle=<F10>


" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set mouse=a		" Enable mouse usage (all modes)
set sw=4		" space indentation wide 4
set hlsearch		" Highlight search items
set incsearch		" Incremental search, start searching as soon as I type
set number		" Show Line Numbers
set autochdir " always switch to the current file directory 
set backspace=indent,eol,start " make backspace a more flexible
set hidden " change buffers without saving
set nostartofline " leave the cursor where it is
set expandtab " no real tabs
set completeopt=menu,preview " display the completition menu and a preview window
set nowrap " don't wrap long lines
set softtabstop=4 shiftwidth=4 expandtab 

"
" Tag List
"
let Tlist_Auto_Open=1	" Automatically Open the Tag List
let Tlist_Exist_OnlyWindow = 1 " if you are the last, kill yourself 

"
" SrcExplorer
"
let g:SrcExpl_pluginList = [
        \ "__Tag_List__",
        \ "_NERD_tree_",
        \ "Source_Explorer",
        \ "-MiniBufExplorer-"
    \ ] 

" // Set the height of Source Explorer window
let g:SrcExpl_winHeight = 8 

" // Set 100 ms for refreshing the Source Explorer
let g:SrcExpl_refreshTime = 100 

" // Enable/Disable the local definition searching, and note that this is not
" // guaranteed to work, the Source Explorer doesn't check the syntax for now.
" // It only searches for a match with the keyword according to command 'gd'
let g:SrcExpl_searchLocalDef = 1 

" Arbeit

set backup
set diffexpr=MyDiff()
"set guifont=Courier_New:h10:cANSI
set helplang=de
set history=1000
set keymodel=startsel,stopsel
set ruler
set selection=inclusive
"set selectmode=mouse,key
set updatetime=300
set whichwrap=b,s,<,>,[,]
color peaksea

let g:tagbar_left=1
let g:tagbar_singleclick=1

filetype plugin on
set ofu=syntaxcomplete#Complete
set completeopt=menu,preview
imap ubpy #!/usr/bin/python
imap syso System.out.println();<LEFT><LEFT>
inoremap ;<cr> <end>;<cr>
inoremap ;; <end>;
set wildmenu
set wildmode=list:longest,full  " command <Tab> completion, list matches, then longest common part, then all.
set scrolloff=3                 " minimum lines to keep above and below cursor
set gdefault                    " the /g flag on :s substitutions by default

  " visual shifting (does not exit Visual mode)
vnoremap < <gv
vnoremap > >gv 

let g:ConqueTerm_Color = 1
let g:ConqueTerm_SessionSupport = 0
let g:ConqueTerm_ReadUnfocused = 1
let g:ConqueTerm_PromptRegex = '^\w\+@[0-9A-Za-z_.-]\+:[0-9A-Za-z_./\~,:-]\+\$'
let g:ConqueTerm_Syntax = 'conque'
