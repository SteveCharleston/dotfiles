#! /usr/bin/env python

# tree.py
#
# Written by Doug Dahms
#
# Prints the tree structure for the path specified on the command line

import argparse
import os
import sys

from os import listdir, sep
from os.path import abspath, basename, isdir
from sys import argv

def tree(dir, padding, print_files=False):
    print padding[:-1] + '`-' + basename(abspath(dir)) + '/'
    padding = padding + ' '
    files = []
    if print_files:
        files = listdir(dir)
    else:
        files = [x for x in listdir(dir) if isdir(dir + sep + x)]
    count = 0
    for file in files:
        count += 1
        #print padding + '|'
        path = dir + sep + file
        if isdir(path):
            if count == len(files):
                tree(path, padding + '  ', print_files)
            else:
                tree(path, padding + '|', print_files)
        else:
            print padding + '`-' + file

def getargs():
    parser = argparse.ArgumentParser(description='Show files in a tree hierarchy')
    parser.add_argument('-f', '--nofiles', action="store_false")
    parser.add_argument('folder', nargs='?', default=os.getcwd())
    return parser.parse_args()


def main():
    args = getargs()
    path = args.folder

    if not isdir(path):
        print 'ERROR: \'' + path + '\' is not a directory'
        sys.exit(1)

    tree(path, ' ', args.nofiles)

if __name__ == '__main__':
    main()

